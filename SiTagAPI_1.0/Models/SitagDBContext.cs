// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace SiTagAPI_1._0.Models;

public partial class SitagDBContext : DbContext
{
    public SitagDBContext()
    {
    }

    public SitagDBContext(DbContextOptions<SitagDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<animal> animal { get; set; }

    public virtual DbSet<data> data { get; set; }

    public virtual DbSet<division> division { get; set; }

    public virtual DbSet<farm> farm { get; set; }

    public virtual DbSet<record> record { get; set; }

    public virtual DbSet<service> service { get; set; }

    public virtual DbSet<user> user { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=sitag2.database.windows.net;Initial Catalog=SitagDB;Persist Security Info=True;User ID=adminSitag;Password=Geshk1234;Encrypt=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<animal>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__animal__3213E83F32190061");
        });

        modelBuilder.Entity<data>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__data__3213E83F4C5A5A0B");

            entity.HasOne(d => d.animal).WithMany(p => p.data)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_animal_data");

            entity.HasOne(d => d.division).WithMany(p => p.data)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_division_data");
        });

        modelBuilder.Entity<division>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__division__3213E83F5C3F5CE9");

            entity.HasOne(d => d.farm).WithMany(p => p.division)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_farm_division");
        });

        modelBuilder.Entity<farm>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__farm__3213E83FE9B09C93");

            entity.HasOne(d => d.user).WithMany(p => p.farm)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_user_farm");
        });

        modelBuilder.Entity<record>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__record__3213E83F26670EEB");

            entity.HasOne(d => d.user).WithMany(p => p.record)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_user_record");
        });

        modelBuilder.Entity<service>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__service__3213E83FAA60F185");

            entity.HasOne(d => d.animal).WithMany(p => p.service)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_animal_service");
        });

        modelBuilder.Entity<user>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PK__user__3213E83FC0ED6D27");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}